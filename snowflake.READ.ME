let depth = 4; // Set recursion depth

function setup() {
  createCanvas(800, 800);
  noLoop(); // Draw once
  drawKochSnowflake(width / 2, height / 2, 300, depth);
}

function drawKochSnowflake(x, y, size, depth) {
  const h = size * sqrt(3) / 2;
  const p1 = createVector(x - size / 2, y + h / 2);
  const p2 = createVector(x + size / 2, y + h / 2);
  const p3 = createVector(x, y - h / 2);

  drawKochSegment(p1, p2, depth);
  drawKochSegment(p2, p3, depth);
  drawKochSegment(p3, p1, depth);
}

function drawKochSegment(p1, p2, depth) {
  if (depth === 0) {
    line(p1.x, p1.y, p2.x, p2.y);
  } else {
    const p3 = p1.copy().lerp(p2, 1 / 3);
    const p5 = p1.copy().lerp(p2, 2 / 3);
    const dx = p5.x - p3.x;
    const dy = p5.y - p3.y;
    const angle = atan2(dy, dx) - PI / 3;
    const length = dist(p3.x, p3.y, p5.x, p5.y);
    const p4 = createVector(p3.x + cos(angle) * length, p3.y + sin(angle) * length);

    drawKochSegment(p1, p3, depth - 1);
    drawKochSegment(p3, p4, depth - 1);
    drawKochSegment(p4, p5, depth - 1);
    drawKochSegment(p5, p2, depth - 1);
  }
}
